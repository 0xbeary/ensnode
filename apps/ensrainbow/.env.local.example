# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------
# Define log level to manage log output.
# Allowed values: "fatal", "error", "warn", "info", "debug", "trace", "silent".
LOG_LEVEL=info

# -----------------------------------------------------------------------------
# ENSRAINBOW DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Specifies the ENSRainbow database schema version (e.g., `v3`).
# This ensures compatibility between the software and its database structure and
# is not related to the API version.
# It is strongly recommended to use the latest available schema version.
DB_SCHEMA_VERSION=v3

# The data label set identifier, which categorizes the type of ENS data.
# This concept  was introduced to solve two main problems: reducing Docker image size and enabling deterministic data versioning.
# By separating data from the image, ENSRainbow can support multiple, distinct datasets
# (e.g., production `subgraph` data vs. a smaller `testenv` set) without requiring
# different images.
#
# Example values: `subgraph`, `searchlight`, `discoveryA`, `testenv`.
LABEL_SET_ID=testenv

# A non-negative integer representing the incremental version for a given label set.
# This allows the dataset of healable labels to grow over time in a predictable
# and deterministic way. New labels can be published periodically as incremental
# updates (e.g., version 0, then version 1), and consumers can target a specific
# version to get reproducible results.
#
# Label set versions are sequential, starting from 0 (e.g., 0, 1, 2, ...).
LABEL_SET_VERSION=0
